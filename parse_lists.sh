#!/bin/sh

IFS="
"

#==============================================================================
# BUILD .tokens.h
#==============================================================================

N=0
OUT_H=".tokens.h"

cat<<EOF > "$OUT_H"
// ** THIS FILE IS AUTOGENERATED - DO NOT EDIT **

#include <Arduino.h>

// special tokens
#define CLI_TOKEN_INTEGER 100
#define CLI_TOKEN_STRING  101

EOF

for TOKEN in `grep -v '^ *\(#.*\)\?$' tokens.list`; do
	echo "#define CLI_TOKEN_`echo "$TOKEN" | tr a-z A-Z` $N"
	echo "PROGMEM const char cli_token_$N[] = \"$TOKEN\";"
	N=$(($N + 1))
done >> "$OUT_H"

echo "PROGMEM const char * const cli_tokens[] = {" >> "$OUT_H"
for i in `seq 0 $(($N - 1))`; do
	echo "	cli_token_$i,"
done >> "$OUT_H"
cat<<EOF >> "$OUT_H"
	NULL
};
EOF

#==============================================================================
# BUILD .clierrs.h
#==============================================================================

N=0
OUT_H=".clierrs.h"
cat<<EOF > "$OUT_H"
// ** THIS FILE IS AUTOGENERATED - DO NOT EDIT **

#include <Arduino.h>

EOF
for L in `grep -v '^ *\(#.*\)\?$' clierrs.list | sed 's# \+=\+#\t#'`; do
	echo "#define `echo "$L" | cut -f1` $N"
	echo "PROGMEM const char cli_err_$N[] = \"`echo "$L" | cut -f2`\";"
	N=$(($N + 1))
done >> "$OUT_H"
echo "PROGMEM const char * const cli_errs[] = {" >> "$OUT_H"
for i in `seq 0 $(($N - 1))`; do
	echo "	cli_err_$i,"
done >> "$OUT_H"
cat<<EOF >> "$OUT_H"
	NULL
};
EOF

exit 0
